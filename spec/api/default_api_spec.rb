=begin
#Ulama.io API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 0.1
Contact: support@ulama.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.55
=end

require 'spec_helper'
require 'json'

# Unit tests for UlamaApi::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = UlamaApi::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(UlamaApi::DefaultApi)
    end
  end

  # unit tests for create_user
  # @param body 
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enroll_user
  # @param body 
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enroll_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_abandoned_carts
  # @param website ID Website
  # @param time Abandon X at least minutes ago
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :cart Filter by Cart
  # @return [Array<Abandon>]
  describe 'get_abandoned_carts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_admin_users
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [Array<Admin>]
  describe 'get_admin_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_api_key_owner
  # @param [Hash] opts the optional parameters
  # @return [Array<Authoirize>]
  describe 'get_api_key_owner test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_carts
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [Array<Carts>]
  describe 'get_carts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_courses
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [Array<Products>]
  describe 'get_courses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_orders
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Filter by status
  # @option opts [BOOLEAN] :split_name Split Name into First Name and Last Name
  # @return [Array<Orders>]
  describe 'get_orders test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payments
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [Array<Payments>]
  describe 'get_payments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # @param website ID Website
  # @param email Email to search
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users_given_progress_pct
  # Get a list of users who reached a percentage of a course
  # @param website ID Website
  # @param percentage Percentage reached
  # @param course ID Course
  # @param [Hash] opts the optional parameters
  # @return [Array<UsersPercentage>]
  describe 'get_users_given_progress_pct test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_websites
  # @param [Hash] opts the optional parameters
  # @return [Array<Websited>]
  describe 'get_websites test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for suspend_user
  # @param body 
  # @param website ID Website
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'suspend_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
